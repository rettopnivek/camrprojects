% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S02-Wrangling.R, R/S99-Legacy.R
\name{match_and_assign}
\alias{match_and_assign}
\title{Assign New Values Based on Partial or Exact Matching}
\usage{
match_and_assign(
  x,
  matches,
  new_values,
  type = "partial",
  default = NA,
  replace_if = NULL
)

match_and_assign(
  x,
  matches,
  new_values,
  type = "partial",
  default = NA,
  replace_if = NULL
)
}
\arguments{
\item{x}{A vector of values to match over.}

\item{matches}{A list of values in \code{x} to match over}

\item{new_values}{A vector of new values to assign based on
matches to elements from \code{matches} (vector must be
of equivalent length to \code{matches}).}

\item{type}{The type of matching, either 'partial' or 'exact'
(uses \code{grepl} or \verb{\\\%in\\\%}, respectively).}

\item{default}{Either a single value to assign in the absence of
a match, or a vector equivalent in length to \code{x}.}

\item{replace_if}{An optional vector specifying the subset of
default values when it is appropriate to assign new values.}
}
\value{
A new vector of equivalent length to \code{x}, with
values assigned based on successful matches.

A new vector of equivalent length to \code{x}, with
values assigned based on successful matches.
}
\description{
Assigns new values based on partial or exact matches with
values from an input vector.

Assigns new values based on partial or exact matches with
values from an input vector.
}
\examples{
x <- c( 'Cat', 'Hat', 'Rat', 'Dog', 'Fog', 'Cog' )
# Partial matching
match_and_assign( x, list( 'at', 'og' ), c('A','B') )
# Exact matching
match_and_assign( x, list( 'Cat', c( 'Dog', 'Fog' ) ), c('A','B'),
                  default = '', type = 'exact' )
# Vector input for argument 'default'
x <- c( 'A', 'A', 'D', 'C', 'A', 'A', 'C', 'D' )
match_and_assign( x, list( 'C', 'D' ), c('B','B'), default = x )
# Using 'replace_if' for conditional assignment
x1 <- rep( LETTERS[1:4], each = 2 )
x2 <- rep( LETTERS[5:6], 4 )
match_and_assign( x2, list( 'E', 'F' ), c('1','2'),
                  default = x1, replace_if = c( 'A', 'B' ) )

x <- c( 'Cat', 'Hat', 'Rat', 'Dog', 'Fog', 'Cog' )
# Partial matching
match_and_assign( x, list( 'at', 'og' ), c('A','B') )
# Exact matching
match_and_assign( x, list( 'Cat', c( 'Dog', 'Fog' ) ), c('A','B'),
                  default = '', type = 'exact' )
# Vector input for argument 'default'
x <- c( 'A', 'A', 'D', 'C', 'A', 'A', 'C', 'D' )
match_and_assign( x, list( 'C', 'D' ), c('B','B'), default = x )
# Using 'replace_if' for conditional assignment
x1 <- rep( LETTERS[1:4], each = 2 )
x2 <- rep( LETTERS[5:6], 4 )
match_and_assign( x2, list( 'E', 'F' ), c('1','2'),
                  default = x1, replace_if = c( 'A', 'B' ) )

}
\author{
Kevin Potter
}
