% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R12-SWA_linking_code.R
\name{camr_SWA_linking_code}
\alias{camr_SWA_linking_code}
\title{Link Records for School-Wide Assessment Data}
\usage{
camr_SWA_linking_code(
  dtf_long,
  lst_link_across = NULL,
  obj_link_using = NULL,
  lst_link_combo = NULL,
  lst_ignore_nonmissing = NULL,
  chr_progress = "bar",
  lgc_matches_only = TRUE
)
}
\arguments{
\item{dtf_long}{A data frame, must have a column with
integer values for time points (\code{'SSS.INT.Time_point'})
and the relevant columns for the linking items.}

\item{lst_link_across}{A list of lists, with each sublist specifying
\code{'Base'} and \code{'Add'} logical vectors for the pair of data
subsets in \code{dtf_long} to link over (e.g., \code{'Base'} would
subset the first time point and \code{'Add'} would subset the second
time point). If \code{NULL} the functions infers all possible
pairings over time points from the \code{'SSS.INT.Time_point'}
variable. If the \code{'Base'} and \code{'Add'} logical vectors
are for the same subset, the function checks for duplicate records
instead.}

\item{obj_link_using}{Either a character vector with the column
names for the linking items, or a list of character vectors,
one vector for each set defined in \code{lst_link_across}.
Passing a list with separate vectors allows using different
linking items for different sets when necessary. If
\code{NULL} assumes the standard set of linking items:
\code{SSS.INT.School.Code}, \code{IDX.INT.Origin.LASID},
\code{SBJ.FCT.Sex}, \code{SBJ.FCT.Link.BirthMonth},
\code{SBJ.FCT.Link.OlderSiblings}, \code{SBJ.FCT.Link.OlderSiblings},
\code{SBJ.FCT.Link.EyeColor}, \code{SBJ.FCT.Link.EyeColor},
\code{SBJ.FCT.Link.MiddleInitial}, \code{SBJ.CHR.Link.Streetname},
and \code{SBJ.INT.Link.KindergartenYearEst}.}

\item{lst_link_combo}{A list of lists, where each sublist consists of
an integer vector indexing the combination of linking items to
consider in order of priority. One sublist of integer vectors must
be defined for each set defined by \code{lst_link_across}. For a
given sublist, indices apply to the character vector defined
for the relevant set in \code{obj_link_using}, meaning that if
character vectors differ across sets, indices should be defined
accordingly.}

\item{lst_ignore_nonmissing}{A list of lists, similar to
\code{lst_link_combo}, indicating items to ignore even if they
are not missing when computing a dissimilarity score over a
given combination (thereby allowing records to be linked even if
some items do not match). If \code{c()} (the default) the function
will not ignore non-missing mismatches.}

\item{chr_progress}{A character string, used to specify how progress
of the function is tracked. If \code{'section'}, prints the completed
sections for the different parts of the linking process to the
console window; if \code{'bar'}, a simple progress bar is shown
on the console window (default); if \code{''} no progress is displayed.}

\item{lgc_matches_only}{A logical value; if TRUE only computes
returns dissimilarity scores for confirmed matches (results in
faster computation).}
}
\value{
A data frame.
}
\description{
Function to link records (e.g., across different
time points) using a set of linking items.
}
\examples{
# Linking across time points
dtf_demo <- camr_SWA_linking_code_simulate('demo')
dtf_demo_linked <- camr_SWA_linking_code(dtf_demo)

# Identifying duplicate records
dtf_dup <- camr_SWA_linking_code_simulate( 'duplicate' )
dtf_dup_linked <- camr_SWA_linking_code(
  dtf_dup,
  lst_link_across = list(
    DR2023F = list(
      Base = rep( TRUE, nrow(dtf_dup) ),
      Add = rep( TRUE, nrow(dtf_dup) )
    )
  )
)

}
\author{
Michael Pascale and Kevin Potter
}
